DROP TABLE caderno_campo;
DROP TABLE cabaz CASCADE CONSTRAINTS PURGE;
DROP TABLE hub CASCADE CONSTRAINTS PURGE;
DROP TABLE cliente_encomenda CASCADE CONSTRAINTS PURGE;
DROP TABLE dados_sensor CASCADE CONSTRAINTS PURGE;
DROP TABLE complexidade CASCADE CONSTRAINTS PURGE;
DROP TABLE rega CASCADE CONSTRAINTS PURGE;
DROP TABLE fator_Producao CASCADE CONSTRAINTS PURGE;
DROP TABLE cultura CASCADE CONSTRAINTS PURGE;
DROP TABLE cultura_colheita CASCADE CONSTRAINTS PURGE;
DROP TABLE plano_rega CASCADE CONSTRAINTS PURGE;
DROP TABLE tipo_sensor CASCADE CONSTRAINTS PURGE;
DROP TABLE parcela CASCADE CONSTRAINTS PURGE;
DROP TABLE parcela_fator_producao CASCADE CONSTRAINTS PURGE;
DROP TABLE parcela_sistema_rega CASCADE CONSTRAINTS PURGE;
DROP TABLE produtor_agricola;
DROP TABLE produtor CASCADE CONSTRAINTS PURGE;
DROP TABLE incidente CASCADE CONSTRAINTS PURGE;
DROP TABLE encomenda CASCADE CONSTRAINTS PURGE;
DROP TABLE estacao_meteorologica CASCADE CONSTRAINTS PURGE;
DROP TABLE sensor CASCADE CONSTRAINTS PURGE;
DROP TABLE cliente CASCADE CONSTRAINTS PURGE;
DROP TABLE empresa CASCADE CONSTRAINTS PURGE;
DROP TABLE colheita CASCADE CONSTRAINTS PURGE;
DROP TABLE SUBSTANCIA CASCADE CONSTRAINTS PURGE;
DROP TABLE nutriente CASCADE CONSTRAINTS PURGE;
DROP TABLE FATOR_NUTRIENTE CASCADE CONSTRAINTS PURGE;
DROP TABLE FATOR_SUBSTANCIA CASCADE CONSTRAINTS PURGE;
DROP TABLE sistema_rega CASCADE CONSTRAINTS PURGE;
DROP TABLE quinta cascade constraints purge;
DROP TABLE restricao cascade constraints purge;
DROP TABLE operacao cascade constraints purge;
DROP TABLE operacao_fator cascade constraints purge;
DROP TABLE operacao_rega cascade constraints purge;





-- <<<<<<<<<<<<<<<<<<<< CREATE TABLES >>>>>>>>>>>>>>>>>>>> --

CREATE TABLE quinta (
    id_quinta INT PRIMARY KEY,
    nome CHAR(255) NOT NULL
);

CREATE TABLE produtor (
    id_produtor INT PRIMARY KEY,
    id_quinta INT,
    nome CHAR(40) NOT NULL,
    email CHAR(40) NOT NULL,
    morada CHAR(40) NOT NULL,
    CONSTRAINT FK_Produtor_Quinta FOREIGN KEY (id_quinta) REFERENCES quinta(id_quinta)
);

CREATE TABLE empresa (
    id_empresa INT PRIMARY KEY,
    id_encomendas VARCHAR(255) NOT NULL,
    nome CHAR(255) NOT NULL,
    email CHAR(255) NOT NULL,
    morada CHAR(255) NOT NULL
);

CREATE TABLE cliente (
    id_cliente INT PRIMARY KEY,
    nome CHAR(255) NOT NULL,
    email CHAR(255) NOT NULL,
    NIF INT NOT NULL,
    morada_correspondencia CHAR(255) NOT NULL,
    morada_entrega CHAR(255) NOT NULL,
    plafond INT NOT NULL,
    n_encomendas_ultimo_ano INT NOT NULL ,
    data_ultimo_incidente DATE NOT NULL ,
    n_incidente INT NOT NULL ,
    valor_encomendas_ultimo_ano INT NOT NULL
);

CREATE TABLE encomenda (
    id_encomenda INT PRIMARY KEY,
    id_cliente INT NOT NULL,
    id_cabazes VARCHAR(255) NOT NULL,
    data_venda DATE NOT NULL,
    valor INT NOT NULL,
    quantidade_cabazes INT NOT NULL,
    CONSTRAINT FK_Encomenda_Cliente FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente)
);

CREATE TABLE cliente_encomenda (
    id_encomenda INT NOT NULL,
    id_venda INT NOT NULL,
    CONSTRAINT FK_venda FOREIGN KEY (id_venda) REFERENCES encomenda(id_encomenda),
    CONSTRAINT FK_cliente FOREIGN KEY (id_encomenda) REFERENCES cliente(id_cliente),
    CONSTRAINT FK_cliente_encomenda PRIMARY KEY (id_encomenda, id_venda)
);

CREATE TABLE hub (
    id_hub INT PRIMARY KEY,
    ncabazes_disponiveis INT NOT NULL
);

CREATE TABLE cultura (
    ID_Cultura INT PRIMARY KEY,
    Tipo CHAR(255) NOT NULL,
    objetivo CHAR(255) NOT NULL,
    CONSTRAINT CK_Cultura_Tipo CHECK (Tipo = 'Temporario' OR Tipo = 'Permanente'),
    CONSTRAINT CK_Cultura_Objetivo CHECK (objetivo = 'Consumo humano' OR objetivo = 'Consumo animal' OR objetivo = 'Adubacao')
);

CREATE TABLE colheita (
    numero_colheita INT PRIMARY KEY,
    id_cultura INT NOT NULL,
    parcelas char(255) NOT NULL,
    data DATE NOT NULL,
    quantidade INT NOT NULL,
    CONSTRAINT fk_colheita_cultura FOREIGN KEY (id_cultura) REFERENCES cultura(id_cultura)
);

CREATE TABLE cabaz (
    id_cabaz INT PRIMARY KEY,
    produto CHAR(255) NOT NULL,
    quantidade INT NOT NULl,
    preco INT NOT NULL,
    id_hub INT,
    numero_colheita int,
    constraint fk_hub foreign key (id_hub) references hub(id_hub),
    constraint fk_colheita foreign key (numero_colheita) references colheita(numero_colheita)
);

CREATE TABLE incidente (
    id_incidente INT PRIMARY KEY,
    id_encomenda INT NOT NULL,
    data_incidente DATE NOT NULL,
    valor INT NOT NULL,
    CONSTRAINT FK_Incidente_Encomenda FOREIGN KEY (id_encomenda) REFERENCES encomenda(id_encomenda)
);


CREATE TABLE parcela (
    id_parcela int PRIMARY KEY,
    ID_Quinta INT NOT NULL,
    area INT NOT NULL,
    CONSTRAINT FK_Parcela_Quinta FOREIGN KEY (ID_Quinta) REFERENCES Quinta(ID_Quinta)
);


CREATE TABLE fator_producao (
    id_fator INT PRIMARY KEY,
    nome CHAR(255) NOT NULL,
    formulacao CHAR(255) NOT NULL,
    ficha_tecnica VARCHAR(255) NOT NULL,
    tipo_fertilizacao CHAR(255) NOT NULL,
    CONSTRAINT ck_fator_producao_formulacao CHECK (formulacao = 'liquido' OR formulacao = 'granulado' OR formulacao = 'po'),
    CONSTRAINT ck_fator_producao_tipo CHECK (tipo_fertilizacao = 'fertilizante' OR tipo_fertilizacao = 'adubo' OR tipo_fertilizacao = 'corretivo' OR tipo_fertilizacao = 'fitofarmaco')
);


CREATE TABLE substancia (
    id_substancia INT PRIMARY KEY,
    nome CHAR(255) NOT NULL
);


CREATE TABLE nutriente (
    id_nutriente INT PRIMARY KEY,
    nome CHAR(255) NOT NULL
);


CREATE TABLE fator_substancia (
    id_fator INT NOT NULL,
    id_substancia INT NOT NULL,
    unidade CHAR(255) NOT NULL,
    quantidade INT NOT NULL,
    CONSTRAINT fk_fator_substancia1 FOREIGN KEY (id_fator) REFERENCES fator_producao(id_fator),
    CONSTRAINT fk_fator_substancia2 FOREIGN KEY (id_substancia) REFERENCES substancia(id_substancia),
    CONSTRAINT pk_fator_substancia PRIMARY KEY (id_fator, id_substancia)
);


CREATE TABLE fator_nutriente (
    id_fator INT NOT NULL,
    id_nutriente INT NOT NULL,
    unidade CHAR(255) NOT NULL,
    quantidade INT NOT NULL,
    CONSTRAINT fk_fator_nutriente1 FOREIGN KEY (id_fator) REFERENCES fator_producao(id_fator),
    CONSTRAINT fk_fator_nutriente2 FOREIGN KEY (id_nutriente) REFERENCES nutriente(id_nutriente),
    CONSTRAINT pk_fator_nutriente PRIMARY KEY (id_fator, id_nutriente)
);

CREATE TABLE plano_rega (
    id_plano INT PRIMARY KEY,
    tempo_rega INT,
    ordem_parcelas CHAR(255),
    periodicidade INT
);

CREATE TABLE sistema_rega (
    id_sistema INT PRIMARY KEY,
    tipo_solucao CHAR(255) NOT NULL,
    CONSTRAINT CK_sistema_tipo CHECK (tipo_solucao = 'Agua' OR tipo_solucao = 'Solu√ßao Aquosa')
);

CREATE TABLE rega (
    id_rega INT PRIMARY KEY,
    id_plano INT,
    id_sistema INT,
    quantidade INT,
    tipo_rega CHAR(255) NOT NULL,
    distribuicao CHAR(255) NOT NULL,
    data_rega DATE NOT NULL,
    CONSTRAINT CK_Rega_Tipo CHECK (tipo_rega = 'Gravidade' OR tipo_rega = 'Bombeada'),
    CONSTRAINT CK_Rega_Distribuicao CHECK (Distribuicao = 'Aspersao' OR Distribuicao = 'Gotejamento' OR Distribuicao = 'Pulverizacao'),
    CONSTRAINT FK_Plano FOREIGN KEY (id_plano) REFERENCES plano_rega(id_plano),
    CONSTRAINT FK_Sistema_Rega FOREIGN KEY (id_sistema) REFERENCES sistema_rega(id_sistema)
);



CREATE TABLE parcela_fator_producao (
    id_parcela int NOT NULL,
    ID_Fator INT NOT NULL,
    CONSTRAINT FK_Parcela_Fator1 FOREIGN KEY (id_parcela) REFERENCES Parcela(id_parcela),
    CONSTRAINT FK_Parcela_Fator2 FOREIGN KEY (ID_Fator) REFERENCES Fator_Producao(ID_Fator),
    CONSTRAINT PK_Parcela_Fator PRIMARY KEY (id_parcela, ID_Fator)
);


CREATE TABLE parcela_sistema_rega (
    id_parcela int NOT NULL,
    id_sistema INT NOT NULL,
    CONSTRAINT FK_Parcela_Rega1 FOREIGN KEY (id_parcela) REFERENCES Parcela(id_parcela),
    CONSTRAINT FK_Parcela_Rega2 FOREIGN KEY (id_sistema) REFERENCES sistema_rega(id_sistema),
    CONSTRAINT PK_Parcela_Rega PRIMARY KEY (id_parcela, id_sistema)
);


create table complexidade (
    id_sistema int,
    variedade_fp char(255) not null,
    quantidade_agua int not null,
    qualidade_agua char(255),
    nculturas int not null,
    nparcelas int not null,
    dimensao_exploracao int not null,
    constraint fk_sistema foreign key (id_sistema) references sistema_rega(id_sistema),
    constraint pk_sistema primary key (id_sistema)
);


CREATE TABLE parcela_cultura (
    id_cultura INT NOT NULL,
    id_parcela INT NOT NULL,
    CONSTRAINT FK_cultura_colheita FOREIGN KEY (id_cultura) REFERENCES cultura(ID_Cultura),
    CONSTRAINT FK_colheita_colheita FOREIGN KEY (id_parcela) REFERENCES parcela(id_parcela),
    CONSTRAINT PK_colheita_cultura PRIMARY KEY (id_cultura, id_parcela)
);

CREATE TABLE parcela_colheita (
    id_cultura INT NOT NULL,
    id_colheita INT NOT NULL,
    CONSTRAINT FK_cultura_colheita FOREIGN KEY (id_cultura) REFERENCES cultura(ID_Cultura),
    CONSTRAINT FK_colheita_colheita FOREIGN KEY (id_colheita) REFERENCES colheita(numero_colheita),
    CONSTRAINT PK_colheita_cultura PRIMARY KEY (id_cultura, id_colheita)
);

CREATE TABLE estacao_meteorologica (
    id_estacao INT NOT NULL PRIMARY KEY
);

CREATE TABLE sensor (
    ID_Sensor INT PRIMARY KEY,
    id_estacao INT NOT NULL ,
    CONSTRAINT FK_estacao FOREIGN KEY (id_estacao) REFERENCES estacao_meteorologica(id_estacao)
);

CREATE TABLE tipo_sensor (
        id_sensor INT NOT NULL,
    tipo CHAR(255) NOT NULL,
    quantidade_sensor_tipo INT NOT NULL,
    CONSTRAINT CK_Sensor_Tipo CHECK (Tipo = 'Pluviosidade' OR Tipo = 'Temperatura solo' OR Tipo = 'Humidade solo'
                                            OR Tipo = 'Velocidade vento' OR Tipo = 'Temperatura atmosferica' OR Tipo = 'Pressao atmosferica'
                                            OR Tipo = 'Humidade ar'),
    CONSTRAINT PK_sensor FOREIGN KEY (id_sensor) REFERENCES sensor(ID_Sensor),
    CONSTRAINT PK_tipo_sensor PRIMARY KEY (id_sensor)
);

CREATE TABLE dados_sensor (
    id_dados INT PRIMARY KEY,
    id_sensor INT NOT NULL,
    data DATE NOT NULL,
    valor INT NOT NULL ,
    unidade CHAR(255) NOT NULL,
    CONSTRAINT FK_Registo_Sensor FOREIGN KEY (id_sensor) REFERENCES Sensor(ID_Sensor)
);

create table caderno_campo (
    id_caderno int primary key,
    id_quinta int,
    tipo_fertilizacao char(255) not null,
    registo_colheita char(255) not null,
    dados_sensores char(255) not null,
    dados_regas char(255) not null,
    constraint fk_quinta foreign key (id_quinta) references quinta(id_quinta)
);

create table produtor_agricola (
    id_produtor_agricola int primary key,
    id_venda int not null,
    numero_colheita int not null,
    nome varchar(255) not null,
    quantidade int not null,
    preco int not null,
    unidade varchar(255) not null,
    constraint fk_numero_colheita foreign key (numero_colheita) references colheita(numero_colheita),
    constraint fk_id_venda foreign key (id_venda) references encomenda(id_encomenda)
);

CREATE TABLE restricao (
    id_restricao INT PRIMARY KEY,
    id_parcela INT NOT NULL,
    id_fator INT NOT NULL,
    data1 DATE NOT NULL,
    data2 DATE NOT NULL,
    CONSTRAINT fk_restricao_fator FOREIGN KEY (id_fator) REFERENCES fator_producao(ID_FATOR),
    CONSTRAINT fk_restricao_parcela FOREIGN KEY (id_parcela) REFERENCES parcela(id_parcela),
    CONSTRAINT ck_restricao_datas CHECK (data1 < data2)
);

CREATE TABLE operacao (
    id_operacao INT PRIMARY KEY,
    id_parcela INT NOT NULL,
    data_operacao DATE,
    estado VARCHAR(20),
    unidade VARCHAR(10) NOT NULL,
    quantidade INT NOT NULL,
    tipo VARCHAR(1) NOT NULL,
    CONSTRAINT fk_parcela_operacao1 FOREIGN KEY (id_parcela) REFERENCES parcela(id_parcela),
    CONSTRAINT ck_operacao_estado CHECK (estado = 'concluido' OR estado = 'cancelado'),
    CONSTRAINT ck_operacao_tipo CHECK (tipo = 'r' OR tipo = 'f') /* r - rega      f - fator */
);

CREATE TABLE operacao_rega (
    id_operacao INT PRIMARY KEY,
    id_rega INT NOT NULL,
    forma_aplicacao VARCHAR(20),
    CONSTRAINT fk_id_rega foreign key (id_rega) references SISTEMA_REGA(ID_SISTEMA),
    CONSTRAINT fk_id_operacao foreign key (id_operacao) references operacao(id_operacao),
    CONSTRAINT ck_forma_rega check (forma_aplicacao = 'foliar' or forma_aplicacao = 'fertirrega' or forma_aplicacao = 'solo')
);

CREATE TABLE operacao_fator (
    id_operacao INT PRIMARY KEY,
    id_fator INT NOT NULL,
    forma_aplicacao VARCHAR(20),
    CONSTRAINT fk_id_operacao_f FOREIGN KEY (id_operacao) REFERENCES operacao(id_operacao),
    CONSTRAINT fk_id_fator FOREIGN KEY (id_fator) REFERENCES fator_producao(id_fator),
    CONSTRAINT ck_forma_fator CHECK (forma_aplicacao = 'foliar' or forma_aplicacao = 'fertirrega' or forma_aplicacao = 'solo')
);

CREATE TABLE pistas_auditoria(
    id_registo           INT GENERATED AS IDENTITY START WITH 1 INCREMENT BY 1,
    id_parcela             INT constraint nn_idOperacao NOT NULL,
    utilizador          varchar(128) constraint nn_utilizador NOT NULL,
    data_tempo_operacao    date constraint nn_dataOperacao_RegistoOperacoesAgricolas NOT NULL,
    tipo_alteracao       char(6) constraint nn_tipoAlteracao_RegistoOperacoesAgricolas NOT NULL,
    constraint pk_RegistoOperacoesAgricolas PRIMARY KEY (id_registo),
    constraint check_type CHECK (lower(tipo_alteracao) IN ('delete', 'update', 'insert')),
    constraint fk_id_parcela FOREIGN KEY (id_parcela) REFERENCES parcela(id_parcela)
);
